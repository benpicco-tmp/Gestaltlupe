<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEACAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAAAAAAGAAAABgAAAAAAEAAAAA
        AAAAAAAAAQEBAAICAgAEBAQABgYGAAcHBwAJCQkACwsLAAwMDAAODg4AEBAQABEREQATExMAFRUVABYW
        FgAYGBgAGhoaABsbGwAdHR0AHx8fACAgIAAiIiIAJCQkACUlJQAnJycAKioqACwsLAAuLi4ALy8vADEx
        MQAzMzMANDQ0ADY2NgA4ODgAOTk5ADs7OwA9PT0APj4+AEBAQABCQkIAQ0NDAEVFRQBHR0cASEhIAEpK
        SgBMTEwATU1NAE9PTwBRUVEAUlJSAFRUVABWVlYAV1dXAFlZWQBbW1sAXFxcAF5eXgBgYGAAYWFhAGNj
        YwBlZWUAZmZmAGhoaABqamoAa2trAG1tbQBvb28AcHBwAHJycgB0dHQAdXV1AHd3dwB5eXkAenp6AHx8
        fAB+fn4Af39/AICAgACCgoIAhISEAIWFhQCHh4cAiYmJAIqKigCMjIwAjo6OAI+PjwCRkZEAk5OTAJSU
        lACWlpYAmJiYAJmZmQCbm5sAnZ2dAJ6engCgoKAAoqKiAKOjowClpaUAp6enAKioqACqqqoArKysAK2t
        rQCvr68AsbGxALKysgC0tLQAtra2ALe3twC5ubkAu7u7ALy8vAC+vr4AwMDAAMHBwQDDw8MAxcXFAMbG
        xgDIyMgAysrKAMvLywDNzc0Az8/PANDQ0ADS0tIA1NTUANXV1QDX19cA2dnZANra2gDc3NwA3t7eAN/f
        3wDh4eEA4+PjAOTk5ADm5uYA6OjoAOnp6QDr6+sA7e3tAO7u7gDw8PAA8vLyAPPz8wD19fUA9/f3APj4
        +AD6+voA/Pz8AP39/QD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        gAAAAH////+AAAAAf////4AAAAD/////wAAAAf/////AAAAH//////gAAA///////gAAf///
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Border.Max.x" Value="0.329163977295359" />
  <Entry Key="Border.Max.x.PARAMETERINFO.Description" Value="Maximal X-Value." />
  <Entry Key="Border.Max.y" Value="1.37662137130248" />
  <Entry Key="Border.Max.y.PARAMETERINFO.Description" Value="Maximal y-Value." />
  <Entry Key="Border.Max.z" Value="1.00942756052927" />
  <Entry Key="Border.Min.x" Value="-1.01954115844936" />
  <Entry Key="Border.Min.x.PARAMETERINFO.Description" Value="Minimal X-Value." />
  <Entry Key="Border.Min.y" Value="0.0279162355576268" />
  <Entry Key="Border.Min.y.PARAMETERINFO.Description" Value="Minimal Y-Value." />
  <Entry Key="Border.Min.z" Value="-0.339277575215551" />
  <Entry Key="Border.Min.z.PARAMETERINFO.Description" Value="Minimal Z-Value" />
  <Entry Key="Formula.Mandelbulb.Pow1" Value="" />
  <Entry Key="Formula.Mandelbulb.Pow2" Value="" />
  <Entry Key="Formula.Mandelbulb.Pow3" Value="" />
  <Entry Key="Formula.Static.Cycles" Value="44" />
  <Entry Key="Formula.Static.Cycles.PARAMETERINFO.Description" Value="Number of iterations used in the formula." />
  <Entry Key="Formula.Static.Cycles.PARAMETERINFO.VIEW.BUTTON" Value="forward,backward," />
  <Entry Key="Formula.Static.Formula" Value="-2" />
  <Entry Key="Formula.Static.Formula.PARAMETERINFO.Description" Value="-1: mandelbrot mode. -2: julia mode (Values from 1 to 26 corresponds to some inbuild formulas.)" />
  <Entry Key="Formula.Static.jx" Value="0.3" />
  <Entry Key="Formula.Static.jx.PARAMETERINFO.Description" Value="X-component of the Julia Seed, if the formula is in julia mode. X-component of the start value , if the formula is in mandelbrot mode." />
  <Entry Key="Formula.Static.jy" Value="0.6" />
  <Entry Key="Formula.Static.jy.PARAMETERINFO.Description" Value="Y-component of the Julia Seed, if the formula is in julia mode. Y-component of the start value , if the formula is in mandelbrot mode." />
  <Entry Key="Formula.Static.jz" Value="0.15" />
  <Entry Key="Formula.Static.jz.PARAMETERINFO.Description" Value="Z-component of the Julia Seed, if the formula is in julia mode. Z-component of the start value , if the formula is in mandelbrot mode." />
  <Entry Key="Formula.Static.jzz" Value="0.1" />
  <Entry Key="Formula.Static.jzz.PARAMETERINFO.Description" Value="Q-component of the Julia Seed, if the formula is in julia mode." />
  <Entry Key="Formula.Static.MinCycle" Value="0" />
  <Entry Key="Formula.Static.MinCycle.PARAMETERINFO.Description" Value="Number of iterations used in the formula, if the inside of the 3D object is rendered." />
  <Entry Key="Intern.Formula.Source" Value="&#xA;public override void Init() { &#xA;  base.Init();&#xA;  additionalPointInfo=new AdditionalPointInfo();&#xA;}&#xA;&#xA;&#xA;&#xA;public override long InSet(double ar, double ai, double aj,  double br, double bi, double bj, double bk, long zkl, bool invers) {&#xA;  double r;&#xA;&#xA;  additionalPointInfo.red=0;&#xA;  additionalPointInfo.green=0;&#xA;  additionalPointInfo.blue=0;&#xA;&#xA;double x=ar;&#xA;double y=ai;&#xA;double z=aj;&#xA;double xx=x*x;&#xA;double yy=y*y;&#xA;double zz=z*z;&#xA;double x1=0,y1=0,z1=0;&#xA;double gr=6;&#xA;int tw=0;&#xA;&#xA; r=xx+yy+zz;&#xA;  for (int n = 1; n &lt; zkl; n++) {&#xA;  &#xA;   &#xA;if(r&gt;bk) {&#xA;  y=2*x*y;&#xA;  x=xx-yy;&#xA;  z=-z*Math.Sqrt(xx+yy+2.0*zz);&#xA;  x+=br;y+=bi;z+=bj;&#xA;} else&#xA;{&#xA;break; &#xA;}&#xA;  xx=x*x;yy=y*y;zz=z*z; &#xA;r=xx+yy+zz;&#xA;if(n&gt;10 &amp;&amp; n&lt;30) {&#xA;    additionalPointInfo.red+=xx/r;&#xA;    additionalPointInfo.green+=yy/r;&#xA;    additionalPointInfo.blue+=zz/r;&#xA;}&#xA;    if (r &gt; gr) { tw = n; break; }&#xA;  }&#xA;&#xA;  if (invers) {&#xA;     if (tw == 0)&#xA;        tw = 1;&#xA;      else&#xA;        tw = 0;&#xA;  }&#xA;  return (tw);&#xA;}&#xA;&#xA;&#xA;" />
  <Entry Key="Transformation.Camera.AngleX" Value="50" />
  <Entry Key="Transformation.Camera.AngleX.PARAMETERINFO.Description" Value="Rotation angle (in degree) for axis x (rotation center is center of the given bounds)." />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleY.PARAMETERINFO.Description" Value="Rotation angle (in degree) for axis y (rotation center is center of the given bounds)." />
  <Entry Key="Transformation.Camera.AngleZ" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ.PARAMETERINFO.Description" Value="Rotation angle (in degree) for axis z (rotation center is center of the given bounds)." />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="0.6" />
  <Entry Key="Transformation.Perspective.Cameraposition.PARAMETERINFO.Description" Value="Distance to the virtual screen. Small values gives a more 3D effect. Large values gives the scene a parallel projection view." />
  <Entry Key="Transformation.Stereo.Angle" Value="-9" />
  <Entry Key="Transformation.Stereo.Angle.PARAMETERINFO.Description" Value="Angle difference in stereo mode." />
  <Entry Key="Transformation.Stereo.EyeDistance" Value="0.5" />
  <Entry Key="Transformation.Stereo.EyeDistance.PARAMETERINFO.Description" Value="EyeDistance in stereo mode." />
  <Entry Key="View.Height" Value="1200" />
  <Entry Key="View.Height.PARAMETERINFO.Description" Value="View.Size*View.Height == height of the rendered bitmap." />
  <Entry Key="View.Perspective" Value="0" />
  <Entry Key="View.Perspective.PARAMETERINFO.Datatype" Value="Bool" />
  <Entry Key="View.Perspective.PARAMETERINFO.Description" Value="Switch between 3D view and parallel view." />
  <Entry Key="View.Width" Value="1200" />
  <Entry Key="View.Width.PARAMETERINFO.Description" Value="View.Size*View.Width == width of the rendered bitmap." />
</ParameterDict>
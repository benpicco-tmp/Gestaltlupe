<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Border.Max.x" Value="-94.7104704928753" />
  <Entry Key="Border.Max.y" Value="-14.6021075566403" />
  <Entry Key="Border.Max.z" Value="101.964634468526" />
  <Entry Key="Border.Min.x" Value="-94.7147531859417" />
  <Entry Key="Border.Min.y" Value="-14.6063902497067" />
  <Entry Key="Border.Min.z" Value="101.962225453676" />
  <Entry Key="Formula.Static.Cycles" Value="170" />
  <Entry Key="Formula.Static.Formula" Value="-1" />
  <Entry Key="Formula.Static.jx" Value="2.1014" />
  <Entry Key="Formula.Static.jy" Value="1.04" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="170" />
  <Entry Key="Intern.Formula.Source" Value="/// &lt;summary&gt;&#xA;        /// Initialisierung&#xA;        /// &lt;/summary&gt;&#xA;        public override void Init() {&#xA;            base.Init();&#xA;&#xA;additionalPointInfo=new AdditionalPointInfo();&#xA;            // Hier kann z.B. pow oder gr aus den Einstellungen gelesen werden.&#xA;        }&#xA;&#xA;&#xA;// Mandelbox&#xA;        public override long InSet(double ar, double ai, double aj,  double br, double bi, double bj, double bk, long zkl, bool invers) {&#xA;&#xA;double gr=50000;&#xA;double xx, yy, zz;&#xA;          long tw;&#xA;          int n;&#xA;          double x=0,y=0,z=0;&#xA;          double r_n = 0;&#xA;double q=0,qq=0;&#xA;double bq=ar; // als Ersatz für bk&#xA;          xx = x * x; yy = y * y; zz = z * z; qq=q*q;&#xA;          tw = 0L;&#xA;          double r = Math.Sqrt(xx + yy + zz);&#xA;  double scale = ai;&#xA;additionalPointInfo.red=0;&#xA;additionalPointInfo.green=0;&#xA;additionalPointInfo.blue=0;&#xA;&#xA;          for (n = 1; n &lt; zkl; n++) {&#xA;//if(scale&lt;-1)&#xA;//scale=scale-ai*(scale+1);&#xA;&#xA;//              ; fold box onto itself  &#xA;              if (x &gt; 1)&#xA;                x = 2.0 - x;&#xA;              else if (x &lt; -1)&#xA;                x = -2.0 - x;&#xA;             &#xA;              if (y &gt; 1)&#xA;                y = 2.0 - y;&#xA;              else if (y &lt; -1)&#xA;                y = -2.0 - y;&#xA;             &#xA;              if (z &gt; 1)&#xA;                z = 2.0 - z;&#xA;              else if (z &lt; -1)&#xA;                z = -2.0 - z;&#xA;&#xA;      if (q &gt; 1)&#xA;                q = 2.0 - q;&#xA;              else if (q &lt; -1)&#xA;                q = -2.0 - q;&#xA;              &#xA;            //  ; fold sphere onto itself&#xA;              double fixedRadius = 1;&#xA;              double minRadius = 0.00001;&#xA; //     double length=   r = Math.Pow(x*x + y*y + z*z,aj);&#xA;   double length=   r = x*x + y*y + z*z+q*q;&#xA;&#xA;if(r!=0 &amp;&amp; n&gt;42 &amp;&amp; n&lt;60 ){&#xA;additionalPointInfo.red+=x*x/r;&#xA;additionalPointInfo.green+=y*y/r;&#xA;additionalPointInfo.blue+=z*z/r;&#xA;&#xA;}&#xA;            if (length &gt; gr) { &#xA;              tw = n; break; &#xA;            }&#xA;&#xA;   double mult=1;&#xA;&#xA;    if (length &lt; minRadius) {&#xA;      //  mult=Math.Sqrt(fixedRadius)/(minRadius);&#xA;    }   else&#xA; if (length &lt; fixedRadius) {&#xA;        mult=fixedRadius/length;&#xA;  }&#xA;   mult*=scale;&#xA;   x*=mult;&#xA;   y*=mult;&#xA;   z*=mult;&#xA;q*=mult;&#xA;   x+=br;&#xA;   y+=bi;&#xA;   z+=bj;&#xA;q+=bq;&#xA;          }&#xA;&#xA;&#xA;          if (invers) {&#xA;            if (tw == 0)&#xA;              tw = 1;&#xA;            else&#xA;              tw = 0;&#xA;          }&#xA;          return (tw);&#xA;&#xA;        }&#xA;&#xA;" />
  <Entry Key="Transformation.AngleX" Value="0" />
  <Entry Key="Transformation.AngleY" Value="0" />
  <Entry Key="Transformation.AngleZ" Value="0" />
  <Entry Key="Transformation.Camera.AngleX" Value="150" />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ" Value="-70" />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="0.3" />
  <Entry Key="Transformation.Stereo.Angle" Value="-9" />
  <Entry Key="Transformation.Stereo.EyeDistance" Value="0.5" />
  <Entry Key="View.Height" Value="720" />
  <Entry Key="View.Perspective" Value="0" />
  <Entry Key="View.Width" Value="1280" />
</ParameterDict>
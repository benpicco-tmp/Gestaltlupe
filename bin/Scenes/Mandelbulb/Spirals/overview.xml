<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Animation.Steps" Value="1" />
  <Entry Key="Border.Max.x" Value="-0.141176402788689" />
  <Entry Key="Border.Max.y" Value="0.622524127477013" />
  <Entry Key="Border.Max.z" Value="-0.145135626211776" />
  <Entry Key="Border.Min.x" Value="-0.141705982154565" />
  <Entry Key="Border.Min.y" Value="0.621994548111137" />
  <Entry Key="Border.Min.z" Value="-0.145665205577652" />
  <Entry Key="Computation.NoOfThreads" Value="4" />
  <Entry Key="Formula.Static.Cycles" Value="75" />
  <Entry Key="Formula.Static.Formula" Value="-1" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="0" />
  <Entry Key="Intern.Formula.Source" Value="&#xA;public override void Init() { &#xA;  base.Init();&#xA;  additionalPointInfo=new AdditionalPointInfo();&#xA;  gr1=GetDouble(&quot;Formula.Static.Cycles&quot;);&#xA;  int tempGr=(int)gr1;&#xA;  gr1=gr1- tempGr;&#xA;  gr1=1-gr1;&#xA;  gr1*=2.4;&#xA;}&#xA;&#xA;double gr1=0;&#xA;&#xA;public override long InSet(double ar, double ai, double aj,  double br, double bi, double bj, double bk, long zkl, bool invers) {&#xA;  double aar, aai, aaj;&#xA;  long tw;&#xA;  int n;&#xA;  int pow = 8; // n=8 default Mandelbulb&#xA;  double gr =Math.Pow(10,gr1)+1.0;  // Bailout&#xA;  double theta, phi;&#xA;  double r_n = 0;&#xA;  aar = ar * ar; aai = ai * ai; aaj = aj * aj;&#xA;  tw = 0L;&#xA;  double r = Math.Sqrt(aar + aai + aaj);&#xA;  double  phi_pow,theta_pow,sin_theta_pow,rn_sin_theta_pow;&#xA;&#xA;  additionalPointInfo.red=0;&#xA;  additionalPointInfo.green=0;&#xA;  additionalPointInfo.blue=0;&#xA;&#xA;  for (n = 1; n &lt; zkl; n++) {&#xA;    theta = Math.Atan2(Math.Sqrt(aar + aai), aj);&#xA;    phi = Math.Atan2(ai, ar);&#xA;    r_n = Math.Pow(r, pow);&#xA;    phi_pow=phi*pow;&#xA;    theta_pow=theta*pow;&#xA;    sin_theta_pow=Math.Sin(theta_pow);&#xA;    rn_sin_theta_pow=r_n* sin_theta_pow;&#xA;    ar =  rn_sin_theta_pow * Math.Cos(phi_pow)+br;&#xA;    ai = rn_sin_theta_pow * Math.Sin(phi_pow)+bi;&#xA;    aj = r_n * Math.Cos(theta_pow)+bj;&#xA;    aar = ar * ar; aai = ai * ai; aaj = aj * aj;&#xA;    r = Math.Sqrt(aar + aai + aaj);&#xA;if(n&gt;35 &amp;&amp; n&lt;55) {&#xA;    additionalPointInfo.red+=aar/r;&#xA;    additionalPointInfo.green+=aai/r;&#xA;    additionalPointInfo.blue+=aaj/r;&#xA;}&#xA;    if (r &gt; gr) { tw = n; break; }&#xA;  }&#xA;&#xA;  if (invers) {&#xA;     if (tw == 0)&#xA;        tw = 1;&#xA;      else&#xA;        tw = 0;&#xA;  }&#xA;  return (tw);&#xA;}&#xA;&#xA;&#xA;" />
  <Entry Key="intern.Formula.TempUpdateVal" Value="vv" />
  <Entry Key="Renderer.AmbientIntensity" Value="66" />
  <Entry Key="Renderer.BackColor.Blue" Value="0" />
  <Entry Key="Renderer.BackColor.Green" Value="0" />
  <Entry Key="Renderer.BackColor.Red" Value="0" />
  <Entry Key="Renderer.BrightLightLevel" Value="0.75" />
  <Entry Key="Renderer.Brightness" Value="1" />
  <Entry Key="Renderer.ColorFactor.Blue" Value="1" />
  <Entry Key="Renderer.ColorFactor.Green" Value="0.713" />
  <Entry Key="Renderer.ColorFactor.Red" Value="1" />
  <Entry Key="Renderer.ColorFactor.RgbType" Value="3" />
  <Entry Key="Renderer.ColorGreyness" Value="0" />
  <Entry Key="Renderer.ColorIntensity" Value="0.3" />
  <Entry Key="Renderer.Contrast" Value="1" />
  <Entry Key="Renderer.Light.X" Value="0.5" />
  <Entry Key="Renderer.Light.Y" Value="1" />
  <Entry Key="Renderer.Light.Z" Value="0.25" />
  <Entry Key="Renderer.LightIntensity" Value="0" />
  <Entry Key="Renderer.MaxFieldOfView" Value="1" />
  <Entry Key="Renderer.MinFieldOfView" Value="0.76" />
  <Entry Key="Renderer.Normalize" Value="1" />
  <Entry Key="Renderer.ShadowJustify" Value="1" />
  <Entry Key="Renderer.ShadowNumber" Value="22" />
  <Entry Key="Renderer.Shininess" Value="12" />
  <Entry Key="Renderer.ShininessFactor" Value="0.9" />
  <Entry Key="Renderer.SmoothNormalLevel" Value="11" />
  <Entry Key="Renderer.UseDarken" Value="0" />
  <Entry Key="Renderer.UseLight" Value="1" />
  <Entry Key="Renderer.UseSharpShadow" Value="0" />
  <Entry Key="Transformation.Camera.AngleX" Value="-66" />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ" Value="250" />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="0.4" />
  <Entry Key="Transformation.Stereo.Angle" Value="-9" />
  <Entry Key="Transformation.Stereo.EyeDistance" Value="0.5" />
  <Entry Key="View.Deph" Value="400" />
  <Entry Key="View.DephAdd" Value="0" />
  <Entry Key="View.Height" Value="1200" />
  <Entry Key="View.Perspective" Value="1" />
  <Entry Key="View.Pipeline.Preview" Value="0" />
  <Entry Key="View.Pipeline.UpdatePreview" Value="0" />
  <Entry Key="View.PosterX" Value="0" />
  <Entry Key="View.PosterZ" Value="0" />
  <Entry Key="View.Raster" Value="2" />
  <Entry Key="View.Size" Value="2" />
  <Entry Key="View.UpdateSteps" Value="5" />
  <Entry Key="View.Width" Value="1200" />
</ParameterDict>
<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Animation.Steps" Value="1" />
  <Entry Key="Border.Max.x" Value="-1.70412873710831" />
  <Entry Key="Border.Max.y" Value="8.42830764790367E-07" />
  <Entry Key="Border.Max.z" Value="-1.70412840732592" />
  <Entry Key="Border.Min.x" Value="-1.70416558569615" />
  <Entry Key="Border.Min.y" Value="-0.000100296861010054" />
  <Entry Key="Border.Min.z" Value="-1.7041652630535" />
  <Entry Key="Formula.Static.Cycles" Value="200" />
  <Entry Key="Formula.Static.Formula" Value="-1" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="200" />
  <Entry Key="Intern.Formula.Source" Value="/* v=abs(v)folding Mandelbox Gestaltlupe Formula*/public override void Init() {base.Init();additionalPointInfo=new AdditionalPointInfo();}public override long InSet(double ar, double ai, double aj,  double br, double bi, double bj, double bk, long zkl, bool invers) {double gr=50000; double xx, yy, zz;long tw;int n;double x=0,y=0,z=0;double r_n = 0;xx = x * x; yy = y * y; zz = z * z;tw = 0L;double r = Math.Sqrt(xx + yy + zz);  double scale = 1.05;additionalPointInfo.red=0; additionalPointInfo.green=0;additionalPointInfo.blue=0;for (n = 1; n &lt; zkl; n++) {if (x &lt; -1) x = -2.0 - x;if (y &lt; -1) y = -2.0 - y;if (z &lt; -1) z = -2.0 - z;double fixedRadius = 1;double minRadius = 0.00001;xx=x*x;yy=y*y;zz=z*z;double length=   r = xx + yy + zz;if(r!=0) {additionalPointInfo.red+=0.5*xx/r;additionalPointInfo.green+=0.5*yy/r;additionalPointInfo.blue+=zz/r;}if (length &gt; gr) {  tw = n; break; }double mult=1;if (length &gt;= minRadius) if (length &lt; fixedRadius) {mult=Math.Sqrt(fixedRadius)/(length);}mult*=scale;x*=mult;y*=mult;z*=mult;&#xD;&#xA;/* In Julia Mode: the fixed Julia values &#xD;&#xA;// Iin Mandelbrot set mode: the room coordinates of the pixel to test */x+=br;y+=bi;z+=bj;}if(invers){if(tw==0)tw=1;else tw=0;}return (tw); &#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;" />
  <Entry Key="Transformation.Camera.AngleX" Value="0" />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ" Value="0" />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="0.3" />
  <Entry Key="Transformation.Stereo.Angle" Value="-9" />
  <Entry Key="Transformation.Stereo.EyeDistance" Value="0.5" />
  <Entry Key="View.Height" Value="1200" />
  <Entry Key="View.Perspective" Value="0" />
  <Entry Key="View.Width" Value="1200" />
</ParameterDict>
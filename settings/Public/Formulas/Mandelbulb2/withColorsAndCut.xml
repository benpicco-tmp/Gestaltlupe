<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Animation.Steps" Value="300" />
  <Entry Key="Border.Max.x" Value="1.16049382716049" />
  <Entry Key="Border.Max.y" Value="0.833333333333336" />
  <Entry Key="Border.Max.z" Value="0.986540368545153" />
  <Entry Key="Border.Max.zz" Value="0" />
  <Entry Key="Border.Min.x" Value="-1.20987654320986" />
  <Entry Key="Border.Min.y" Value="-2.66666666666666" />
  <Entry Key="Border.Min.z" Value="-0.986540368545153" />
  <Entry Key="Border.Min.zz" Value="0" />
  <Entry Key="Composite.AmbientLight" Value="0" />
  <Entry Key="Composite.BackgoundDarken" Value="0" />
  <Entry Key="Composite.Blurring" Value="0" />
  <Entry Key="Composite.BlurringDeph" Value="0" />
  <Entry Key="Composite.Color1Factor" Value="50" />
  <Entry Key="Composite.Color1TestArea" Value="10" />
  <Entry Key="Composite.FrontLight" Value="1" />
  <Entry Key="Composite.Normalize" Value="1" />
  <Entry Key="Composite.Renderer" Value="4" />
  <Entry Key="Composite.Renderer.Universal.ComicStyle" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseAmbient" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseColorFromFormula" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseDarken" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseMedianColorFromFormula" Value="1" />
  <Entry Key="Composite.Shininess" Value="2" />
  <Entry Key="Composite.UseAmbient" Value="1" />
  <Entry Key="Composite.UseColor1" Value="0" />
  <Entry Key="Composite.UseDarken" Value="1" />
  <Entry Key="Composite.UseDerivation" Value="1" />
  <Entry Key="Composite.UseMedian" Value="0" />
  <Entry Key="Computation.NoOfThreads" Value="8" />
  <Entry Key="Formula.Mandelbulb.Pow1" Value="2" />
  <Entry Key="Formula.Mandelbulb.Pow2" Value="2" />
  <Entry Key="Formula.Mandelbulb.Pow3" Value="2" />
  <Entry Key="Formula.Static.Cycles" Value="30" />
  <Entry Key="Formula.Static.Formula" Value="-1" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="51" />
  <Entry Key="Intern.Formula.Source" Value="/// &lt;summary&gt;&#xD;&#xA;        /// Initialisierung&#xD;&#xA;        /// &lt;/summary&gt;&#xD;&#xA;        public override void Init() {&#xD;&#xA;            base.Init();&#xD;&#xA;            // Hier kann z.B. pow oder gr aus den Einstellungen gelesen werden.&#xD;&#xA;&#xD;&#xA;  additionalPointInfo=new AdditionalPointInfo();&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;        public override long InSet(double ar, double ai, double aj,  double br, double bi, double bj, double bk, long zkl, bool invers) {&#xD;&#xA;&#xD;&#xA;double gr=2;&#xD;&#xA;int pow = 2; // n=8 entspricht dem Mandelbulb&#xD;&#xA;double xx, yy, zz;&#xD;&#xA;          long tw;&#xD;&#xA;          int n;&#xD;&#xA;//          ai = 0; aj = 0; ak = 0;&#xD;&#xA;&#xD;&#xA;          double x=0,y=0,z=0;&#xD;&#xA;          double r_n = 0;&#xD;&#xA;&#xD;&#xA;          xx = x * x; yy = y * y; zz = z * z; &#xD;&#xA;          tw = 0L;&#xD;&#xA;          double r = Math.Sqrt(xx + yy + zz);&#xD;&#xA;&#xD;&#xA;if(bi&gt;0)&#xD;&#xA;return 1;&#xD;&#xA;bi=0.1*bi;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;additionalPointInfo.red=0;additionalPointInfo.green=0;additionalPointInfo.blue=0;&#xD;&#xA;          for (n = 1; n &lt; zkl; n++) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            &#xD;&#xA;          double r_xy=Math.Sqrt(xx+yy);&#xD;&#xA;  //  double r_xy=xx+yy;&#xD;&#xA;                     &#xD;&#xA;  double a = 1;&#xD;&#xA;            &#xD;&#xA;            if(r_xy!=0.0)&#xD;&#xA;             a= 1 - zz *( r_xy);&#xD;&#xA;&#xD;&#xA;/*&#xD;&#xA;            y=x*y*a+bi;&#xD;&#xA;            x = (xx - yy) * a+br;&#xD;&#xA;            z =  z * r_xy+bj;&#xD;&#xA;*/&#xD;&#xA;            y=2 *x*y*a+bj;&#xD;&#xA;            x = (xx - yy) * a+br;&#xD;&#xA;            z = 2 * z * r_xy+bi;&#xD;&#xA;&#xD;&#xA;            xx = x * x; yy = y * y; zz = z * z;&#xD;&#xA;            r = Math.Sqrt(xx + yy + zz);&#xD;&#xA;            &#xD;&#xA;if(n&gt;3 &amp;&amp; n&lt;50) {&#xD;&#xA;&#xD;&#xA;if(x&gt;0)&#xD;&#xA;additionalPointInfo.red+=x/r;&#xD;&#xA;if(y&gt;0)&#xD;&#xA;additionalPointInfo.green+=y/r;&#xD;&#xA;if(z&gt;0)&#xD;&#xA;additionalPointInfo.blue+=z/r;&#xD;&#xA;&#xD;&#xA;if(x&lt;0)&#xD;&#xA;additionalPointInfo.red-=x/r;&#xD;&#xA;if(y&lt;0)&#xD;&#xA;additionalPointInfo.green-=y/r;&#xD;&#xA;if(z&lt;0)&#xD;&#xA;additionalPointInfo.blue-=z/r;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            if (r &gt; gr) { &#xD;&#xA;              tw = n; break; &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;          if (invers) {&#xD;&#xA;            if (tw == 0)&#xD;&#xA;              tw = 1;&#xD;&#xA;            else&#xD;&#xA;              tw = 0;&#xD;&#xA;          }&#xD;&#xA;          return (tw);&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;" />
  <Entry Key="test2" Value="df" />
  <Entry Key="Transformation.3.AngleX" Value="0" />
  <Entry Key="Transformation.3.AngleY" Value="0" />
  <Entry Key="Transformation.3.AngleZ" Value="0" />
  <Entry Key="Transformation.3.CenterX" Value="0" />
  <Entry Key="Transformation.3.CenterY" Value="0" />
  <Entry Key="Transformation.3.CenterZ" Value="0" />
  <Entry Key="Transformation.AngleX" Value="-50" />
  <Entry Key="Transformation.AngleY" Value="-30" />
  <Entry Key="Transformation.AngleZ" Value="-20" />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="0.45" />
  <Entry Key="View.ClassicView" Value="0" />
  <Entry Key="View.Deph" Value="2800" />
  <Entry Key="View.Height" Value="720" />
  <Entry Key="View.Perspective" Value="0" />
  <Entry Key="View.PosterX" Value="0" />
  <Entry Key="View.PosterZ" Value="0" />
  <Entry Key="View.Raster" Value="2" />
  <Entry Key="View.Size" Value="1" />
  <Entry Key="View.Width" Value="1280" />
  <Entry Key="View.Zoom" Value="1" />
</ParameterDict>
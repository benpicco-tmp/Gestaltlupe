<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Border.Max.x" Value="0.0625821734475969" />
  <Entry Key="Border.Max.y" Value="0.224198878164658" />
  <Entry Key="Border.Max.z" Value="0.0291453902260892" />
  <Entry Key="Border.Min.x" Value="-0.0426665736186049" />
  <Entry Key="Border.Min.y" Value="-0.180869529838039" />
  <Entry Key="Border.Min.z" Value="-0.0300570299986478" />
  <Entry Key="Formula.Static.Cycles" Value="21" />
  <Entry Key="Formula.Static.Formula" Value="-2" />
  <Entry Key="Formula.Static.jx" Value="0.005" />
  <Entry Key="Formula.Static.jy" Value="0.01" />
  <Entry Key="Formula.Static.jz" Value="0.06" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="51" />
  <Entry Key="Formula.Universal.Para1" Value="16.7" />
  <Entry Key="Formula.Universal.Para2" Value="9" />
  <Entry Key="Formula.Universal.Para3" Value="1012" />
  <Entry Key="Formula.Universal.Para4" Value="16.7" />
  <Entry Key="Formula.Universal.Para5" Value="0" />
  <Entry Key="Formula.Universal.Para6" Value="0" />
  <Entry Key="Formula.Universal.Para7" Value="0" />
  <Entry Key="Formula.Universal.Para8" Value="0" />
  <Entry Key="Formula.Universal.Para9" Value="0" />
  <Entry Key="Intern.Formula.Source" Value="int gr=20;&#xD;&#xA;&#xD;&#xA;/// &lt;summary&gt;&#xD;&#xA;        /// Initialisierung&#xD;&#xA;        /// &lt;/summary&gt;&#xD;&#xA;        public override void Init() {&#xD;&#xA;            base.Init();&#xD;&#xA;            // Hier kann z.B. pow oder gr aus den Einstellungen gelesen werden.&#xD;&#xA;&#xD;&#xA;additionalPointInfo=new AdditionalPointInfo();&#xD;&#xA;para1=GetDouble(&quot;Formula.Universal.Para1&quot;);&#xD;&#xA;para2=GetDouble(&quot;Formula.Universal.Para2&quot;);&#xD;&#xA;para3=GetDouble(&quot;Formula.Universal.Para3&quot;);&#xD;&#xA;para4=GetDouble(&quot;Formula.Universal.Para4&quot;);&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;double para1=0.5;&#xD;&#xA;double para2=1;&#xD;&#xA;double para3=2;&#xD;&#xA;double para4=0.5;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;        public override long InSet(double ar, double ai, double aj, double br, double bi, double bj, double bk, long zkl, bool invers) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            double aar, aai, ai_alt, aj_alt, aaj, cj, ck, ari, arj, ark, aik, aij, ajk, ak_alt;&#xD;&#xA;            double c, d;&#xD;&#xA;            long tw;&#xD;&#xA;            int n;&#xD;&#xA;&#xD;&#xA;additionalPointInfo.red=0;&#xD;&#xA;additionalPointInfo.green=0;&#xD;&#xA;additionalPointInfo.blue=0;&#xD;&#xA;&#xD;&#xA;double ak=para4,aak=0,al=0,aal=0;&#xD;&#xA;//ai=0.1;&#xD;&#xA;            aar = ar * ar; aai = ai * ai; aaj = aj * aj;tw = 0L;&#xD;&#xA;            d = aar + aai + aaj;&#xD;&#xA;            for (n = 1; n &lt; zkl; n++) {&#xD;&#xA;                ai = para3 * ai * ar * aj+br;&#xD;&#xA;                aj =para2* aaj - (aai + aar) *para1+bi ;&#xD;&#xA;                ar =para2* aar - (aai + aaj) *para4+bj;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;double aiTemp=ai;&#xD;&#xA;ai=aj;&#xD;&#xA;aj=ar;&#xD;&#xA;ar=aiTemp;&#xD;&#xA;&#xD;&#xA;                aar = ar * ar; aai = ai * ai; aaj = aj * aj;&#xD;&#xA;                d = aar + aai + aaj;&#xD;&#xA;&#xD;&#xA;// Set Color&#xD;&#xA;double ar2=ar; if(ar&lt;0) ar2=-ar;&#xD;&#xA;double ai2=ai; if(ai&lt;0) ai2=-ai;&#xD;&#xA;double aj2=aj; if(aj&lt;0) aj2=-aj;&#xD;&#xA;&#xD;&#xA;if(d&gt;0) {&#xD;&#xA;additionalPointInfo.red+=ar2/d;&#xD;&#xA;additionalPointInfo.green+=ai2/d;&#xD;&#xA;additionalPointInfo.blue+=aj2/d;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;                if ((d) &gt; gr) { tw = n; break; }&#xD;&#xA;            }&#xD;&#xA;            return (tw);&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;" />
  <Entry Key="Transformation.Camera.AngleX" Value="0" />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ" Value="0" />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="0.8845" />
  <Entry Key="Transformation.Stereo.Angle" Value="-9" />
  <Entry Key="Transformation.Stereo.EyeDistance" Value="0.5" />
  <Entry Key="View.Height" Value="720" />
  <Entry Key="View.Perspective" Value="1" />
  <Entry Key="View.Width" Value="1280" />
</ParameterDict>
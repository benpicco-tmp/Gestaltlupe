<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Border.Max.x" Value="0.81225829563605" />
  <Entry Key="Border.Max.x.PARAMETERINFO.Description" Value="Maximal X-Value." />
  <Entry Key="Border.Max.y" Value="1.2952053612236" />
  <Entry Key="Border.Max.y.PARAMETERINFO.Description" Value="Maximal y-Value." />
  <Entry Key="Border.Max.z" Value="1.21440959580225" />
  <Entry Key="Border.Max.zz" Value="0" />
  <Entry Key="Border.Min.x" Value="-1.9231654160729" />
  <Entry Key="Border.Min.x.PARAMETERINFO.Description" Value="Minimal X-Value." />
  <Entry Key="Border.Min.y" Value="-1.44021835048534" />
  <Entry Key="Border.Min.y.PARAMETERINFO.Description" Value="Minimal Y-Value." />
  <Entry Key="Border.Min.z" Value="-1.52101411590669" />
  <Entry Key="Border.Min.z.PARAMETERINFO.Description" Value="Minimal Z-Value" />
  <Entry Key="Border.Min.zz" Value="0" />
  <Entry Key="Formula.Fix.Height" Value="1" />
  <Entry Key="Formula.Mandelbulb.Pow1" Value="" />
  <Entry Key="Formula.Static.Cycles" Value="150" />
  <Entry Key="Formula.Static.Cycles.PARAMETERINFO.Description" Value="Number of iterations used in the formula." />
  <Entry Key="Formula.Static.Cycles.PARAMETERINFO.VIEW.BUTTON" Value="forward,backward," />
  <Entry Key="Formula.Static.Formula" Value="-1" />
  <Entry Key="Formula.Static.Formula.PARAMETERINFO.Description" Value="-1: mandelbrot mode. -2: julia mode (Values from 1 to 26 corresponds to some inbuild formulas.)" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jx.PARAMETERINFO.Description" Value="X-component of the Julia Seed, if the formula is in julia mode. X-component of the start value , if the formula is in mandelbrot mode." />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jy.PARAMETERINFO.Description" Value="Y-component of the Julia Seed, if the formula is in julia mode. Y-component of the start value , if the formula is in mandelbrot mode." />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.jz.PARAMETERINFO.Description" Value="Z-component of the Julia Seed, if the formula is in julia mode. Z-component of the start value , if the formula is in mandelbrot mode." />
  <Entry Key="Formula.Static.jzz" Value="570.011269722014" />
  <Entry Key="Formula.Static.jzz.PARAMETERINFO.Description" Value="Q-component of the Julia Seed, if the formula is in julia mode." />
  <Entry Key="Formula.Static.MinCycle" Value="0" />
  <Entry Key="Formula.Static.MinCycle.PARAMETERINFO.Description" Value="Number of iterations used in the formula, if the inside of the 3D object is rendered." />
  <Entry Key="Intern.Formula.Source" Value="public override void Init() {&#xA;  base.Init();&#xA;  additionalPointInfo=new AdditionalPointInfo();&#xA;}&#xA;&#xA;public override long InSet(double x, double y, double z,  &#xA;                                   double x0, double y0, double z0, double bk,&#xA;                                   long maxiter, bool inverse) {&#xA;&#xA;  int tw=0,n=0;&#xA;  double r=0;&#xA;  double gr=10;&#xA;  double xx=0,yy=0,zz=0;&#xA;  double x1=0,y1=0,z1=0;&#xA;&#xA;  double minR=1000; // used for coloring&#xA;  Fractrace.Geometry.VecRotation vecRot = new Fractrace.Geometry.VecRotation();&#xA;&#xA;  for (n = 1; n &lt; maxiter; n++) {&#xA;&#xA;     xx=x*x;yy=y*y;zz=z*z;&#xA;     r=xx+yy+zz;&#xA;     if (r &gt; gr) { tw = n; break; }&#xA;&#xA;     double theta = Math.Atan2(Math.Sqrt(xx + yy), z);&#xA;     double phi = Math.Atan2(y, x);&#xA;&#xA;     vecRot.x = 0;&#xA;     vecRot.y = 0;&#xA;     vecRot.z =1;&#xA;     vecRot.angle = phi;&#xA;     vecRot.Normalize();&#xA;     Fractrace.Geometry.Vec3 pos2=new Fractrace.Geometry.Vec3(x,y,z);&#xA;     Fractrace.Geometry.Vec3 newPos2= vecRot.getTransform(pos2);&#xA;     x = newPos2.X;&#xA;     y = newPos2.Y;&#xA;     z = newPos2.Z; &#xA;&#xA;     r=Math.Sqrt(r);&#xA;     x=r*x+x0;&#xA;     y=r*y+y0;&#xA;     z=r*z+z0;&#xA;&#xA;     if(minR&gt;r) minR=r; //  used for coloring&#xA;&#xA;  }&#xA;&#xA;// coloring:&#xA;additionalPointInfo.red=0.01;&#xA;additionalPointInfo.green=0.01;&#xA;additionalPointInfo.blue=minR;&#xA;&#xA;if (inverse) { if (tw == 0) tw = 1; else tw = 0; }&#xA;   return (tw);&#xA;}&#xA;" />
  <Entry Key="Transformation.Camera.AngleX" Value="90" />
  <Entry Key="Transformation.Camera.AngleX.PARAMETERINFO.Description" Value="Rotation angle (in degree) for axis x (rotation center is center of the given bounds)." />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleY.PARAMETERINFO.Description" Value="Rotation angle (in degree) for axis y (rotation center is center of the given bounds)." />
  <Entry Key="Transformation.Camera.AngleZ" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ.PARAMETERINFO.Description" Value="Rotation angle (in degree) for axis z (rotation center is center of the given bounds)." />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="1" />
  <Entry Key="Transformation.Perspective.Cameraposition.PARAMETERINFO.Description" Value="Distance to the virtual screen. Small values gives a more 3D effect. Large values gives the scene a parallel projection view." />
  <Entry Key="Transformation.Stereo.Angle" Value="-9" />
  <Entry Key="Transformation.Stereo.Angle.PARAMETERINFO.Description" Value="Angle difference in stereo mode." />
  <Entry Key="Transformation.Stereo.EyeDistance" Value="0.5" />
  <Entry Key="Transformation.Stereo.EyeDistance.PARAMETERINFO.Description" Value="EyeDistance in stereo mode." />
  <Entry Key="View.Height" Value="1200" />
  <Entry Key="View.Height.PARAMETERINFO.Description" Value="View.Size*View.Height == height of the rendered bitmap." />
  <Entry Key="View.Perspective" Value="0" />
  <Entry Key="View.Perspective.PARAMETERINFO.Datatype" Value="Bool" />
  <Entry Key="View.Perspective.PARAMETERINFO.Description" Value="Switch between 3D view and parallel view." />
  <Entry Key="View.Width" Value="1200" />
  <Entry Key="View.Width.PARAMETERINFO.Description" Value="View.Size*View.Width == width of the rendered bitmap." />
</ParameterDict>
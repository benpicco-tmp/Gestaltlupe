<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Animation.Steps" Value="300" />
  <Entry Key="Border.Max.x" Value="1.88916648646177" />
  <Entry Key="Border.Max.y" Value="2.23953186890838" />
  <Entry Key="Border.Max.z" Value="1.32616908468947" />
  <Entry Key="Border.Max.zz" Value="0" />
  <Entry Key="Border.Min.x" Value="-2.77274576698861" />
  <Entry Key="Border.Min.y" Value="-2.04643099773192" />
  <Entry Key="Border.Min.z" Value="-1.43752674702031" />
  <Entry Key="Border.Min.zz" Value="0" />
  <Entry Key="Composite.AmbientLight" Value="0" />
  <Entry Key="Composite.BackgoundDarken" Value="0" />
  <Entry Key="Composite.Blurring" Value="0" />
  <Entry Key="Composite.BlurringDeph" Value="0" />
  <Entry Key="Composite.Color1Factor" Value="50" />
  <Entry Key="Composite.Color1TestArea" Value="10" />
  <Entry Key="Composite.FrontLight" Value="1" />
  <Entry Key="Composite.Normalize" Value="1" />
  <Entry Key="Composite.Renderer" Value="6" />
  <Entry Key="Composite.Renderer.Universal.AmbientLightIntensity" Value="0.4" />
  <Entry Key="Composite.Renderer.Universal.Brightening" Value="0" />
  <Entry Key="Composite.Renderer.Universal.ComicStyle" Value="1" />
  <Entry Key="Composite.Renderer.Universal.FrontLightIntensity" Value="0.1" />
  <Entry Key="Composite.Renderer.Universal.NormalizeColors" Value="0" />
  <Entry Key="Composite.Renderer.Universal.UseAmbient" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseColorFromFormula" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseDarken" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseMedianColorFromFormula" Value="1" />
  <Entry Key="Composite.Shininess" Value="2" />
  <Entry Key="Composite.UseAmbient" Value="1" />
  <Entry Key="Composite.UseColor1" Value="0" />
  <Entry Key="Composite.UseDarken" Value="0" />
  <Entry Key="Composite.UseDerivation" Value="1" />
  <Entry Key="Composite.UseMedian" Value="1" />
  <Entry Key="Computation.NoOfThreads" Value="8" />
  <Entry Key="Formula.Mandelbulb.Pow1" Value="2" />
  <Entry Key="Formula.Mandelbulb.Pow2" Value="2" />
  <Entry Key="Formula.Mandelbulb.Pow3" Value="2" />
  <Entry Key="Formula.Static.Cycles" Value="23" />
  <Entry Key="Formula.Static.Formula" Value="-1" />
  <Entry Key="Formula.Static.jx" Value="0.0001" />
  <Entry Key="Formula.Static.jy" Value="0.0001" />
  <Entry Key="Formula.Static.jz" Value="0.00001" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="51" />
  <Entry Key="Intern.Formula.Source" Value="int gr=20;&#xD;&#xA;  public override void Init() {&#xD;&#xA;            base.Init();&#xD;&#xA;           additionalPointInfo=new AdditionalPointInfo();&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;     public override long InSet(double ar, double ai, double aj, double br, double bi, double bj, double bk, long zkl, bool invers) {&#xD;&#xA;&#xD;&#xA;          double xx, yy, zz;&#xD;&#xA;          long tw;&#xD;&#xA;          int n;&#xD;&#xA;          double x = ar, y = ai, z = aj;&#xD;&#xA;&#xD;&#xA;          xx = x * x; yy = y * y; zz = z * z;&#xD;&#xA;          tw = 0;&#xD;&#xA;          double r = Math.Sqrt(xx + yy + zz);&#xD;&#xA;          Fractrace.Geometry.VecRotation vecRot = new Fractrace.Geometry.VecRotation();&#xD;&#xA;&#xD;&#xA;additionalPointInfo.red=0;&#xD;&#xA;additionalPointInfo.green=0;&#xD;&#xA;additionalPointInfo.blue=0;&#xD;&#xA;          for (n = 1; n &lt; zkl; n++) {&#xD;&#xA;&#xD;&#xA;// 1. Rotation&#xD;&#xA;&#xD;&#xA;            double phi = Math.Atan2(y, x);&#xD;&#xA;       double phi2 = Math.Atan2(y, z);&#xD;&#xA;&#xD;&#xA;double mult=1;&#xD;&#xA;            vecRot.y = z;&#xD;&#xA;            vecRot.x =0;&#xD;&#xA;            vecRot.z =-y;&#xD;&#xA;&#xD;&#xA;double zMult=-1;&#xD;&#xA;if(y&lt;0)&#xD;&#xA;zMult=1;&#xD;&#xA;//if(z!=0)&#xD;&#xA;//zMult=Math.Sqrt(Math.Abs(z));&#xD;&#xA;            vecRot.angle =zMult*phi;&#xD;&#xA;//if(z&lt;0)&#xD;&#xA;   //         vecRot.angle=  -vecRot.angle;&#xD;&#xA;            vecRot.Normalize();&#xD;&#xA;            Fractrace.Geometry.Vec3 pos=new Fractrace.Geometry.Vec3(x,y,z);&#xD;&#xA;            Fractrace.Geometry.Vec3 newPos= vecRot.getTransform(pos);&#xD;&#xA;            x = newPos.X;&#xD;&#xA;            y = newPos.Y;&#xD;&#xA;            z = newPos.Z;&#xD;&#xA;   //         xx = x * x; yy = y * y; zz = z * z;// aak = ak * ak;&#xD;&#xA;           r = Math.Sqrt(xx + yy + zz);&#xD;&#xA;//r=xx+yy+zz;&#xD;&#xA;/*&#xD;&#xA;     x *= r;&#xD;&#xA;            y *= r;&#xD;&#xA;            z *= r;*/&#xD;&#xA;// 2. Rotation&#xD;&#xA;&#xD;&#xA;            phi = Math.Atan2(y, x);&#xD;&#xA;       phi2 = Math.Atan2(y, z);&#xD;&#xA;&#xD;&#xA;mult=1;&#xD;&#xA;            vecRot.y = 0;&#xD;&#xA;            vecRot.x =0;&#xD;&#xA;            vecRot.z =1;&#xD;&#xA;&#xD;&#xA;            vecRot.angle =-phi2;&#xD;&#xA;            vecRot.Normalize();&#xD;&#xA;            pos=new Fractrace.Geometry.Vec3(x,y,z);&#xD;&#xA;             newPos= vecRot.getTransform(pos);&#xD;&#xA;            x = newPos.X;&#xD;&#xA;            y = newPos.Y;&#xD;&#xA;            z = newPos.Z;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            xx = x * x; yy = y * y; zz = z * z;// aak = ak * ak;&#xD;&#xA;            r = Math.Sqrt(xx + yy + zz);&#xD;&#xA;//r=xx+yy+zz;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//r*=r;&#xD;&#xA;if(r!=0) {&#xD;&#xA;additionalPointInfo.red+=x*x/r;&#xD;&#xA;additionalPointInfo.green+=y*y/r;&#xD;&#xA;additionalPointInfo.blue+=z*z/r;&#xD;&#xA;}&#xD;&#xA;            x *= r;&#xD;&#xA;            y *= r;&#xD;&#xA;            z *= r;&#xD;&#xA;            y += bj;&#xD;&#xA;            x += br;&#xD;&#xA;            z += bi;&#xD;&#xA;&#xD;&#xA;            if (r &gt; gr) {&#xD;&#xA;              tw = n; break;&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Switch inner and outer view&#xD;&#xA;          if (invers) {&#xD;&#xA;            if (tw == 0)&#xD;&#xA;              tw = 1;&#xD;&#xA;            else&#xD;&#xA;              tw = 0;&#xD;&#xA;          }&#xD;&#xA;          return (tw);&#xD;&#xA;        }&#xD;&#xA;" />
  <Entry Key="test2" Value="df" />
  <Entry Key="Transformation.3.AngleX" Value="0" />
  <Entry Key="Transformation.3.AngleY" Value="0" />
  <Entry Key="Transformation.3.AngleZ" Value="0" />
  <Entry Key="Transformation.3.CenterX" Value="0" />
  <Entry Key="Transformation.3.CenterY" Value="0" />
  <Entry Key="Transformation.3.CenterZ" Value="0" />
  <Entry Key="Transformation.AngleX" Value="-30" />
  <Entry Key="Transformation.AngleY" Value="0" />
  <Entry Key="Transformation.AngleZ" Value="0" />
  <Entry Key="Transformation.Camera.AngleX" Value="20" />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ" Value="0" />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="1" />
  <Entry Key="Transformation.Stereo.Angle" Value="-9" />
  <Entry Key="Transformation.Stereo.EyeDistance" Value="0.5" />
  <Entry Key="View.ClassicView" Value="0" />
  <Entry Key="View.Deph" Value="1800" />
  <Entry Key="View.DephAdd" Value="0" />
  <Entry Key="View.Height" Value="720" />
  <Entry Key="View.Perspective" Value="0" />
  <Entry Key="View.PosterX" Value="0" />
  <Entry Key="View.PosterZ" Value="0" />
  <Entry Key="View.Raster" Value="2" />
  <Entry Key="View.Size" Value="0.5" />
  <Entry Key="View.Width" Value="1280" />
  <Entry Key="View.Zoom" Value="1" />
</ParameterDict>
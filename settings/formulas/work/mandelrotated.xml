<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Animation.Steps" Value="80" />
  <Entry Key="Border.Max.x" Value="0.790123456790127" />
  <Entry Key="Border.Max.y" Value="1.18518518518518" />
  <Entry Key="Border.Max.z" Value="0.790123456790127" />
  <Entry Key="Border.Max.zz" Value="0" />
  <Entry Key="Border.Min.x" Value="-0.790123456790127" />
  <Entry Key="Border.Min.y" Value="-1.18518518518518" />
  <Entry Key="Border.Min.z" Value="-0.790123456790127" />
  <Entry Key="Border.Min.zz" Value="0" />
  <Entry Key="Composite.AmbientLight" Value="0" />
  <Entry Key="Composite.BackgoundDarken" Value="0" />
  <Entry Key="Composite.Blurring" Value="0" />
  <Entry Key="Composite.BlurringDeph" Value="0" />
  <Entry Key="Composite.Color1Factor" Value="50" />
  <Entry Key="Composite.Color1TestArea" Value="10" />
  <Entry Key="Composite.FrontLight" Value="1" />
  <Entry Key="Composite.Normalize" Value="1" />
  <Entry Key="Composite.Renderer" Value="4" />
  <Entry Key="Composite.Renderer.Universal.ComicStyle" Value="0" />
  <Entry Key="Composite.Renderer.Universal.UseAmbient" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseColorFromFormula" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseDarken" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseMedianColorFromFormula" Value="1" />
  <Entry Key="Composite.Shininess" Value="2" />
  <Entry Key="Composite.UseAmbient" Value="1" />
  <Entry Key="Composite.UseColor1" Value="0" />
  <Entry Key="Composite.UseDarken" Value="1" />
  <Entry Key="Composite.UseDerivation" Value="1" />
  <Entry Key="Composite.UseMedian" Value="0" />
  <Entry Key="Computation.NoOfThreads" Value="8" />
  <Entry Key="Formula.Mandelbulb.Pow1" Value="2" />
  <Entry Key="Formula.Mandelbulb.Pow2" Value="2" />
  <Entry Key="Formula.Mandelbulb.Pow3" Value="2" />
  <Entry Key="Formula.Static.Cycles" Value="30" />
  <Entry Key="Formula.Static.Formula" Value="-1" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="0.01" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="51" />
  <Entry Key="Intern.Formula.Source" Value="        public override void Init() {&#xD;&#xA;            base.Init();&#xD;&#xA;            additionalPointInfo=new AdditionalPointInfo();&#xD;&#xA;            gr1=GetDouble(&quot;Formula.Static.Cycles&quot;);&#xD;&#xA;           int tempGr=(int)gr1;&#xD;&#xA;          gr1=gr1- tempGr;&#xD;&#xA;          gr1=1-gr1;&#xD;&#xA;          gr1*=2.4;&#xD;&#xA;&#xD;&#xA;//Set(&quot;Formula.Mandelbulb.Pow1&quot;,8);&#xD;&#xA;// pow3=GetDouble(&quot;Formula.Mandelbulb.Pow3&quot;);&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA; double gr1=0;&#xD;&#xA;&#xD;&#xA;        public override long InSet(double ar, double ai, double aj,  double br, double bi, double bj, double bk, long zkl, bool invers) {&#xD;&#xA;            double aar, aai, aaj;&#xD;&#xA;            long tw;&#xD;&#xA;            int n;&#xD;&#xA;                double gr =Math.Pow(10,gr1)+1.0;  //   10; // Ab diesem Wert liegt mit Sicherheit Nichtzugehörigkeit zur Menge vor.&#xD;&#xA;            double theta, phi;&#xD;&#xA;&#xD;&#xA;            double r_n = 0;&#xD;&#xA;            aar = ar * ar; aai = ai * ai; aaj = aj * aj;&#xD;&#xA;            tw = 0L;&#xD;&#xA;            double r = Math.Sqrt(aar + aai + aaj);&#xD;&#xA;&#xD;&#xA;             double      phi_pow;&#xD;&#xA;             double       theta_pow;&#xD;&#xA;             double    sin_theta_pow;&#xD;&#xA;              double  rn_sin_theta_pow;&#xD;&#xA;&#xD;&#xA;additionalPointInfo.red=0;&#xD;&#xA;additionalPointInfo.green=0;&#xD;&#xA;additionalPointInfo.blue=0;&#xD;&#xA;&#xD;&#xA;double red=0; double green=0; double blue=0;&#xD;&#xA;&#xD;&#xA; if(bi&gt;0) return 1 ;&#xD;&#xA;&#xD;&#xA;            for (n = 1; n &lt; zkl; n++) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;double rxy=Math.Sqrt(aai+aaj);&#xD;&#xA;double dx=ai/rxy;&#xD;&#xA;double dy=aj/rxy;&#xD;&#xA;double temp_xy=2.0*ar*rxy;&#xD;&#xA;ai=temp_xy*dx;&#xD;&#xA;aj=temp_xy*dy;&#xD;&#xA;ar=aar-rxy*rxy;&#xD;&#xA;&#xD;&#xA;/*&#xD;&#xA;ai*=2.1;&#xD;&#xA;aj*=2.1;&#xD;&#xA;ar*=2.1;&#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;                aar = ar * ar; aai = ai * ai; aaj = aj * aj;&#xD;&#xA;/*&#xD;&#xA;rxy=Math.Sqrt(aai+aaj);&#xD;&#xA;dx=ai/rxy;&#xD;&#xA;dy=aj/rxy;&#xD;&#xA;temp_xy=2.0*ar*rxy;&#xD;&#xA;ai=temp_xy*dx;&#xD;&#xA;aj=temp_xy*dy;&#xD;&#xA;ar=aar-rxy*rxy;&#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;      aar = ar * ar; aai = ai * ai; aaj = aj * aj;&#xD;&#xA;&#xD;&#xA;/*&#xD;&#xA;rxy=Math.Sqrt(aai+aar);&#xD;&#xA;dx=ai/rxy;&#xD;&#xA;double dr=ar/rxy;&#xD;&#xA;temp_xy=2.0*aj*rxy;&#xD;&#xA;ai=temp_xy*dx;&#xD;&#xA;ar=temp_xy*dr;&#xD;&#xA;aj=aaj-rxy*rxy;&#xD;&#xA;     aar = ar * ar; aai = ai * ai; aaj = aj * aj;&#xD;&#xA;&#xD;&#xA;rxy=Math.Sqrt(aaj+aar);&#xD;&#xA;dy=aj/rxy;&#xD;&#xA; dr=ar/rxy;&#xD;&#xA;temp_xy=2.0*ai*rxy;&#xD;&#xA;aj=temp_xy*dy;&#xD;&#xA;ai=temp_xy*dr;&#xD;&#xA;ar=aai-rxy*rxy;&#xD;&#xA;&#xD;&#xA;*/&#xD;&#xA;                ar +=br;&#xD;&#xA;                ai +=bi;&#xD;&#xA;                aj +=bj;&#xD;&#xA;&#xD;&#xA;                aar = ar * ar; aai = ai * ai; aaj = aj * aj;&#xD;&#xA;                r = Math.Sqrt(aar + aai + aaj);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;if(n&gt;3 &amp;&amp; n&lt;50) {&#xD;&#xA;double ar2=ar; if(ar&lt;0) ar2=-ar;&#xD;&#xA;double ai2=ai; if(ai&lt;0) ai2=-ai;&#xD;&#xA;double aj2=aj; if(aj&lt;0) aj2=-aj;&#xD;&#xA;&#xD;&#xA;red+=ar/r;&#xD;&#xA;green+=ai/r;&#xD;&#xA;blue+=aj/r;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;                if (r &gt; gr) { tw = n; break; }&#xD;&#xA;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;additionalPointInfo.red=red;&#xD;&#xA;additionalPointInfo.green=green;&#xD;&#xA;additionalPointInfo.blue=blue;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            if (invers) {&#xD;&#xA;                if (tw == 0)&#xD;&#xA;                    tw = 1;&#xD;&#xA;                else&#xD;&#xA;                    tw = 0;&#xD;&#xA;            }&#xD;&#xA;            return (tw);&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;" />
  <Entry Key="test2" Value="df" />
  <Entry Key="Transformation.3.AngleX" Value="0" />
  <Entry Key="Transformation.3.AngleY" Value="0" />
  <Entry Key="Transformation.3.AngleZ" Value="0" />
  <Entry Key="Transformation.3.CenterX" Value="0" />
  <Entry Key="Transformation.3.CenterY" Value="0" />
  <Entry Key="Transformation.3.CenterZ" Value="0" />
  <Entry Key="Transformation.AngleX" Value="-60" />
  <Entry Key="Transformation.AngleY" Value="15.5076923076923" />
  <Entry Key="Transformation.AngleZ" Value="42" />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="1" />
  <Entry Key="View.ClassicView" Value="0" />
  <Entry Key="View.Deph" Value="2100" />
  <Entry Key="View.Height" Value="720" />
  <Entry Key="View.Perspective" Value="1" />
  <Entry Key="View.PosterX" Value="0" />
  <Entry Key="View.PosterZ" Value="0" />
  <Entry Key="View.Raster" Value="2" />
  <Entry Key="View.Size" Value="1" />
  <Entry Key="View.Width" Value="1280" />
  <Entry Key="View.Zoom" Value="1" />
</ParameterDict>
<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Animation.Steps" Value="300" />
  <Entry Key="Border.Max.x" Value="0.589916902683406" />
  <Entry Key="Border.Max.y" Value="-1.83219463471474" />
  <Entry Key="Border.Max.z" Value="-1.4503587493324" />
  <Entry Key="Border.Max.zz" Value="0" />
  <Entry Key="Border.Min.x" Value="0.164956626054162" />
  <Entry Key="Border.Min.y" Value="-2.15526322651236" />
  <Entry Key="Border.Min.z" Value="-1.83325485942286" />
  <Entry Key="Border.Min.zz" Value="0" />
  <Entry Key="Composite.AmbientLight" Value="0" />
  <Entry Key="Composite.BackgoundDarken" Value="0" />
  <Entry Key="Composite.Blurring" Value="0" />
  <Entry Key="Composite.BlurringDeph" Value="0" />
  <Entry Key="Composite.Color1Factor" Value="50" />
  <Entry Key="Composite.Color1TestArea" Value="10" />
  <Entry Key="Composite.FrontLight" Value="1" />
  <Entry Key="Composite.Normalize" Value="1" />
  <Entry Key="Composite.Renderer" Value="6" />
  <Entry Key="Composite.Renderer.Universal.AmbientLightIntensity" Value="0.4" />
  <Entry Key="Composite.Renderer.Universal.Brightening" Value="0" />
  <Entry Key="Composite.Renderer.Universal.ComicStyle" Value="1" />
  <Entry Key="Composite.Renderer.Universal.FrontLightIntensity" Value="0.1" />
  <Entry Key="Composite.Renderer.Universal.NormalizeColors" Value="0" />
  <Entry Key="Composite.Renderer.Universal.UseAmbient" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseColorFromFormula" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseDarken" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseMedianColorFromFormula" Value="1" />
  <Entry Key="Composite.Shininess" Value="2" />
  <Entry Key="Composite.UseAmbient" Value="1" />
  <Entry Key="Composite.UseColor1" Value="0" />
  <Entry Key="Composite.UseDarken" Value="1" />
  <Entry Key="Composite.UseDerivation" Value="1" />
  <Entry Key="Composite.UseMedian" Value="1" />
  <Entry Key="Computation.NoOfThreads" Value="8" />
  <Entry Key="Formula.Mandelbox.Scale" Value="-1.1" />
  <Entry Key="Formula.Mandelbulb.Pow1" Value="2" />
  <Entry Key="Formula.Mandelbulb.Pow2" Value="2" />
  <Entry Key="Formula.Mandelbulb.Pow3" Value="2" />
  <Entry Key="Formula.Static.Cycles" Value="170" />
  <Entry Key="Formula.Static.Formula" Value="-1" />
  <Entry Key="Formula.Static.jx" Value="-1.1" />
  <Entry Key="Formula.Static.jy" Value="0.00" />
  <Entry Key="Formula.Static.jz" Value="1" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="170" />
  <Entry Key="Intern.Formula.Source" Value="public override void Init() {&#xD;&#xA;  base.Init();&#xD;&#xA;  additionalPointInfo=new AdditionalPointInfo();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Mandelbox Formula&#xD;&#xA;public override long InSet(double ar, double ai, double aj,  double br, double bi, double bj, double bk, long zkl, bool invers) {&#xD;&#xA;&#xD;&#xA;  double gr=50000;&#xD;&#xA;  double xx, yy, zz;&#xD;&#xA;  long tw=0;&#xD;&#xA;  int n;&#xD;&#xA;  double x=0,y=0,z=0;&#xD;&#xA;   xx = x * x; yy = y * y; zz = z * z; &#xD;&#xA;   double r =xx + yy + zz;&#xD;&#xA;  double scale = GetDouble(&quot;Formula.Mandelbox.Scale&quot;);&#xD;&#xA;  additionalPointInfo.red=0; &#xD;&#xA;  additionalPointInfo.green=0;&#xD;&#xA;  additionalPointInfo.blue=0;&#xD;&#xA;&#xD;&#xA;  for (n = 1; n &lt; zkl; n++) {&#xD;&#xA;     &#xD;&#xA;     //  fold box onto itself  &#xD;&#xA;              &#xD;&#xA;  if (x &gt; 1)&#xD;&#xA;    x = 2.0 - x;&#xD;&#xA;  else if (x &lt; -1)&#xD;&#xA;    x = -2.0 - x;&#xD;&#xA;             &#xD;&#xA;  if (y &gt; 1)&#xD;&#xA;    y = 2.0 - y;&#xD;&#xA;  else if (y &lt; -1)&#xD;&#xA;    y = -2.0 - y;&#xD;&#xA;             &#xD;&#xA;  if (z &gt; 1)&#xD;&#xA;   z = 2.0 - z;&#xD;&#xA;  else if (z &lt; -1)&#xD;&#xA;    z = -2.0 - z;&#xD;&#xA;              &#xD;&#xA;    //  fold sphere onto itself&#xD;&#xA;      double minRadius = 0.00001;&#xD;&#xA;      r = Math.Pow(x*x + y*y + z*z,aj);&#xD;&#xA;&#xD;&#xA;  if(r!=0) {&#xD;&#xA;    additionalPointInfo.red+=x*x/r;&#xD;&#xA;    additionalPointInfo.green+=y*y/r;&#xD;&#xA;    additionalPointInfo.blue+=z*z/r;&#xD;&#xA;  }&#xD;&#xA;  if (r &gt; gr) { &#xD;&#xA;    tw = n; break; &#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  double mult=1;&#xD;&#xA;&#xD;&#xA; if (r &lt; 1 &amp;&amp; r&gt;minRadius) {&#xD;&#xA;        mult=1/r;&#xD;&#xA;  }&#xD;&#xA;   mult*=scale;&#xD;&#xA;   x*=mult;&#xD;&#xA;   y*=mult;&#xD;&#xA;   z*=mult;&#xD;&#xA;   x+=br;&#xD;&#xA;   y+=bi;&#xD;&#xA;   z+=bj;&#xD;&#xA;   }&#xD;&#xA;&#xD;&#xA;   if (invers) {&#xD;&#xA;      if (tw == 0)&#xD;&#xA;        tw = 1;&#xD;&#xA;      else&#xD;&#xA;         tw = 0;&#xD;&#xA;       }&#xD;&#xA;      return (tw);&#xD;&#xA;   }&#xD;&#xA;&#xD;&#xA;" />
  <Entry Key="test2" Value="df" />
  <Entry Key="Transformation.3.AngleX" Value="0" />
  <Entry Key="Transformation.3.AngleY" Value="0" />
  <Entry Key="Transformation.3.AngleZ" Value="1" />
  <Entry Key="Transformation.3.CenterX" Value="0.305643744002077" />
  <Entry Key="Transformation.3.CenterY" Value="-1.92725602031343" />
  <Entry Key="Transformation.3.CenterZ" Value="0.368397773597299" />
  <Entry Key="Transformation.AngleX" Value="34" />
  <Entry Key="Transformation.AngleY" Value="0" />
  <Entry Key="Transformation.AngleZ" Value="-78" />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="0.3" />
  <Entry Key="Transformation.Stereo.Angle" Value="-9" />
  <Entry Key="Transformation.Stereo.EyeDistance" Value="0.5" />
  <Entry Key="View.ClassicView" Value="0" />
  <Entry Key="View.Deph" Value="1800" />
  <Entry Key="View.Height" Value="1200" />
  <Entry Key="View.Perspective" Value="0" />
  <Entry Key="View.PosterX" Value="0" />
  <Entry Key="View.PosterZ" Value="0" />
  <Entry Key="View.Raster" Value="2" />
  <Entry Key="View.Size" Value="0.2" />
  <Entry Key="View.Width" Value="1200" />
  <Entry Key="View.Zoom" Value="1" />
</ParameterDict>
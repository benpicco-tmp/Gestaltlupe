<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Animation.Steps" Value="300" />
  <Entry Key="Border.Max.x" Value="2" />
  <Entry Key="Border.Max.y" Value="4.00000000000001" />
  <Entry Key="Border.Max.z" Value="2" />
  <Entry Key="Border.Max.zz" Value="0" />
  <Entry Key="Border.Min.x" Value="-2" />
  <Entry Key="Border.Min.y" Value="4.32986979603811E-15" />
  <Entry Key="Border.Min.z" Value="-2" />
  <Entry Key="Border.Min.zz" Value="0" />
  <Entry Key="Composite.AmbientLight" Value="0" />
  <Entry Key="Composite.BackgoundDarken" Value="0" />
  <Entry Key="Composite.Blurring" Value="0" />
  <Entry Key="Composite.BlurringDeph" Value="0" />
  <Entry Key="Composite.Color1Factor" Value="50" />
  <Entry Key="Composite.Color1TestArea" Value="10" />
  <Entry Key="Composite.FrontLight" Value="1" />
  <Entry Key="Composite.Normalize" Value="1" />
  <Entry Key="Composite.Renderer" Value="4" />
  <Entry Key="Composite.Renderer.Universal.ComicStyle" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseAmbient" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseColorFromFormula" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseDarken" Value="1" />
  <Entry Key="Composite.Renderer.Universal.UseMedianColorFromFormula" Value="1" />
  <Entry Key="Composite.Shininess" Value="2" />
  <Entry Key="Composite.UseAmbient" Value="1" />
  <Entry Key="Composite.UseColor1" Value="0" />
  <Entry Key="Composite.UseDarken" Value="1" />
  <Entry Key="Composite.UseDerivation" Value="1" />
  <Entry Key="Composite.UseMedian" Value="1" />
  <Entry Key="Computation.NoOfThreads" Value="0.5" />
  <Entry Key="Formula.Mandelbulb.Pow1" Value="8" />
  <Entry Key="Formula.Mandelbulb.Pow2" Value="8" />
  <Entry Key="Formula.Mandelbulb.Pow3" Value="8" />
  <Entry Key="Formula.Static.Cycles" Value="14" />
  <Entry Key="Formula.Static.Formula" Value="-2" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="51" />
  <Entry Key="Intern.Formula.Source" Value="int gr=20;&#xD;&#xA;&#xD;&#xA;/// &lt;summary&gt;&#xD;&#xA;        /// Initialisierung&#xD;&#xA;        /// &lt;/summary&gt;&#xD;&#xA;        public override void Init() {&#xD;&#xA;            base.Init();&#xD;&#xA;            // Hier kann z.B. pow oder gr aus den Einstellungen gelesen werden.&#xD;&#xA;&#xD;&#xA;additionalPointInfo=new AdditionalPointInfo();&#xD;&#xA;/*&#xD;&#xA;para1=GetDouble(&quot;Formula.Universal.Para1&quot;);&#xD;&#xA;para2=GetDouble(&quot;Formula.Universal.Para2&quot;);&#xD;&#xA;para3=GetDouble(&quot;Formula.Universal.Para3&quot;);&#xD;&#xA;para4=GetDouble(&quot;Formula.Universal.Para4&quot;);&#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;/*&#xD;&#xA;double para1=0.5;&#xD;&#xA;double para2=1;&#xD;&#xA;double para3=2;&#xD;&#xA;double para4=0.5;&#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;        public override long InSet(double ar, double ai, double aj, double br, double bi, double bj, double bk, long zkl, bool invers) {&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            double aar, aai, ai_alt, aj_alt, aaj, cj, ck, ari, arj, ark, aik, aij, ajk, ak_alt;&#xD;&#xA;            double c, d;&#xD;&#xA;            long tw;&#xD;&#xA;            int n;&#xD;&#xA;&#xD;&#xA;additionalPointInfo.red=0;&#xD;&#xA;additionalPointInfo.green=0;&#xD;&#xA;additionalPointInfo.blue=0;&#xD;&#xA;&#xD;&#xA;br=0.5;&#xD;&#xA;bi=1;&#xD;&#xA;bj=2.0;&#xD;&#xA;bk=1;&#xD;&#xA;&#xD;&#xA;double ak=bk,aak=0,al=0,aal=0;&#xD;&#xA;//ai=0.1;&#xD;&#xA;            aar = ar * ar; aai = ai * ai; aaj = aj * aj;aak=ak*ak; tw = 0L;&#xD;&#xA;            d = aar + aai + aaj+aak;&#xD;&#xA;            for (n = 1; n &lt; zkl; n++) {&#xD;&#xA;                ai = bj * ai * ar * aj*ak ;&#xD;&#xA;                aj =bi* aaj - (aai + aar+aak-1) *br ;&#xD;&#xA;                ar =bi* aar - (aai + aaj+aak-1) *br;&#xD;&#xA;     ak = bi*aak - (1-ak)*(aai + aaj+aar) *br ;&#xD;&#xA;//ak=1;&#xD;&#xA;//                al = 2 * al *aj* ar * aj*ak ;&#xD;&#xA;&#xD;&#xA;                aar = ar * ar; aai = ai * ai; aaj = aj * aj;aak=ak*ak;&#xD;&#xA;                d = aar + aai + aaj+aak;&#xD;&#xA;&#xD;&#xA;double ar2=ar; if(ar&lt;0) ar2=-ar;&#xD;&#xA;double ai2=ai; if(ai&lt;0) ai2=-ai;&#xD;&#xA;double aj2=aj; if(aj&lt;0) aj2=-aj;&#xD;&#xA;&#xD;&#xA;if(d&gt;0) {&#xD;&#xA;additionalPointInfo.red+=ar2/d;&#xD;&#xA;additionalPointInfo.green+=ai2/d;&#xD;&#xA;additionalPointInfo.blue+=aj2/d;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;                if ((d) &gt; gr) { tw = n; break; }&#xD;&#xA;            }&#xD;&#xA;            return (tw);&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;" />
  <Entry Key="test2" Value="df" />
  <Entry Key="Transformation.3.AngleX" Value="0" />
  <Entry Key="Transformation.3.AngleY" Value="0" />
  <Entry Key="Transformation.3.AngleZ" Value="0" />
  <Entry Key="Transformation.3.CenterX" Value="0" />
  <Entry Key="Transformation.3.CenterY" Value="0" />
  <Entry Key="Transformation.3.CenterZ" Value="0" />
  <Entry Key="Transformation.AngleX" Value="6.66666666666667" />
  <Entry Key="Transformation.AngleY" Value="0" />
  <Entry Key="Transformation.AngleZ" Value="-6.66666666666667" />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="0.8845" />
  <Entry Key="Transformation.Stereo.Angle" Value="-9" />
  <Entry Key="Transformation.Stereo.EyeDistance" Value="0.5" />
  <Entry Key="View.ClassicView" Value="0" />
  <Entry Key="View.Deph" Value="1800" />
  <Entry Key="View.Height" Value="720" />
  <Entry Key="View.Perspective" Value="1" />
  <Entry Key="View.PosterX" Value="0" />
  <Entry Key="View.PosterZ" Value="0" />
  <Entry Key="View.Raster" Value="2" />
  <Entry Key="View.Size" Value="0.3" />
  <Entry Key="View.Width" Value="1280" />
  <Entry Key="View.Zoom" Value="1" />
</ParameterDict>
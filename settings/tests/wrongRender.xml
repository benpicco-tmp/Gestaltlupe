<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Border.Max.x" Value="-0.776798742449761" />
  <Entry Key="Border.Max.y" Value="-1.76507637285464" />
  <Entry Key="Border.Max.z" Value="-0.653061239153686" />
  <Entry Key="Border.Max.zz" Value="0" />
  <Entry Key="Border.Min.x" Value="0.644059342943989" />
  <Entry Key="Border.Min.y" Value="-0.344218287460954" />
  <Entry Key="Border.Min.z" Value="0.767796846240075" />
  <Entry Key="Border.Min.zz" Value="0" />
  <Entry Key="Formula.Mandelbulb.Pow1" Value="2" />
  <Entry Key="Formula.Mandelbulb.Pow2" Value="2" />
  <Entry Key="Formula.Mandelbulb.Pow3" Value="2" />
  <Entry Key="Formula.Static.Cycles" Value="7" />
  <Entry Key="Formula.Static.Formula" Value="-1" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="0" />
  <Entry Key="Formula.VecRot.Angle1Mult" Value="" />
  <Entry Key="Formula.VecRot.Angle1Rot" Value="" />
  <Entry Key="Formula.VecRot.Angle1Type" Value="" />
  <Entry Key="Formula.VecRot.Angle2Mul" Value="" />
  <Entry Key="Formula.VecRot.Angle2Mult" Value="" />
  <Entry Key="Formula.VecRot.Angle2Rot" Value="" />
  <Entry Key="Formula.VecRot.Angle2Type" Value="" />
  <Entry Key="Formula.VecRot.Angle3Mult" Value="" />
  <Entry Key="Formula.VecRot.Angle3Rot" Value="" />
  <Entry Key="Formula.VecRot.Angle3Type" Value="" />
  <Entry Key="Formula.VecRot.Mult1" Value="" />
  <Entry Key="Formula.VecRot.Mult2" Value="" />
  <Entry Key="Formula.VecRot.Mult3" Value="" />
  <Entry Key="Formula.VecRot.Power" Value="" />
  <Entry Key="Intern.Formula.Source" Value="&#xA;public override void Init() { &#xA;  base.Init();&#xA;  additionalPointInfo=new AdditionalPointInfo();&#xA;  gr1=GetDouble(&quot;Formula.Static.Cycles&quot;);&#xA;  int tempGr=(int)gr1;&#xA;  gr1=gr1- tempGr;&#xA;  gr1=1-gr1;&#xA;  gr1*=2.4;&#xA;}&#xA;&#xA;double gr1=0;&#xA;&#xA;public override long InSet(double ar, double ai, double aj,  double br, double bi, double bj, double bk, long zkl, bool invers) {&#xA;&#xA;&#xA;/*double aar, aai, aaj;&#xA;  long tw;&#xA;  int n;&#xA;  int pow = 12; // n=8 default Mandelbulb&#xA;*/&#xA;  double gr =Math.Pow(10,gr1)+1.0;  // Bailout&#xA;/*&#xA; double theta, phi;&#xA;  double r_n = 0;&#xA;  aar = ar * ar; aai = ai * ai; aaj = aj * aj;&#xA;  tw = 0L;&#xA;  double r = Math.Sqrt(aar + aai + aaj);&#xA;  double  phi_pow,theta_pow,sin_theta_pow,rn_sin_theta_pow;&#xA;*/&#xA;&#xA;  additionalPointInfo.red=0;&#xA;  additionalPointInfo.green=0;&#xA;  additionalPointInfo.blue=0;&#xA;&#xA;              double aar, aai, aaj;&#xA;            long tw;&#xA;            int n;&#xA;            int pow = 8; // n=8 entspricht dem Mandelbulb&#xA;            double theta, phi;&#xA;&#xA;            double r_n = 0;&#xA;            aar = ar * ar; aai = ai * ai; aaj = aj * aj; //aak = ak * ak; &#xA;            tw = 0L;&#xA;            double r = Math.Sqrt(aar + aai + aaj);&#xA;&#xA;            for (n = 1; n &lt; zkl; n++)&#xA;            {&#xA;&#xA;                theta = Math.Atan2(Math.Sqrt(aar + aai), aj);&#xA;                phi = Math.Atan2(ai, ar);&#xA;                r_n = Math.Pow(r, pow);&#xA;                ar = r_n * Math.Sin(theta * pow) * Math.Cos(phi * pow);&#xA;                ai = r_n * Math.Sin(theta * pow) * Math.Sin(phi * pow);&#xA;                aj = r_n * Math.Cos(theta * pow);&#xA;&#xA;                ar += br;&#xA;                ai += bi;&#xA;                aj += bj;&#xA;&#xA;                aar = ar * ar; aai = ai * ai; aaj = aj * aj;// aak = ak * ak;&#xA;                r = Math.Sqrt(aar + aai + aaj);&#xA;&#xA;                if (r &gt; gr) { tw = n; break; }&#xA;&#xA;            }&#xA;&#xA;/*&#xA;            if (invers)&#xA;            {&#xA;                if (tw == 0)&#xA;                    tw = 1;&#xA;                else&#xA;                    tw = 0;&#xA;            }&#xA;*/&#xA;            return (tw);&#xA;}&#xA;&#xA;&#xA;" />
  <Entry Key="Transformation.3.AngleX" Value="0" />
  <Entry Key="Transformation.3.AngleY" Value="0" />
  <Entry Key="Transformation.3.AngleZ" Value="0" />
  <Entry Key="Transformation.3.CenterX" Value="-0.407525953022069" />
  <Entry Key="Transformation.3.CenterY" Value="2.56540588074062" />
  <Entry Key="Transformation.3.CenterZ" Value="0.07803688462125" />
  <Entry Key="Transformation.AngleX" Value="0" />
  <Entry Key="Transformation.AngleY" Value="0" />
  <Entry Key="Transformation.AngleZ" Value="0" />
  <Entry Key="Transformation.Camera.AngleX" Value="0" />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ" Value="0" />
  <Entry Key="Transformation.Perspective.Cameraposition" Value="0.6" />
  <Entry Key="Transformation.Stereo.Angle" Value="-9" />
  <Entry Key="Transformation.Stereo.EyeDistance" Value="0.5" />
  <Entry Key="View.Height" Value="1200" />
  <Entry Key="View.Perspective" Value="1" />
  <Entry Key="View.Width" Value="1200" />
</ParameterDict>